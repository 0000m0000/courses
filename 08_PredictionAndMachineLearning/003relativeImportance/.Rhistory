setwd("~/Dropbox/Jeff/teaching/2013/modules/08_PredictionAndMachineLearning/")
ls()
list.files()
setwd("001predictionStudyDesign/")
slidify("index.Rmd")
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
setwd("~/Dropbox/Jeff/teaching/2013/modules")
setwd("08_PredictionAndMachineLearning/")
setwd("001predictionMotivation/")
slidify("index.Rmd")
library(slidify)
slidify("index.Rmd")
browseURL("index.html")
setwd("../002whatIsPrediction/")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
library(sliidfy)
library(slidify)
setwd("~/Dropbox/Jeff/teaching/2013/")
setwd("modules/08_PredictionAndMachineLearning/002whatIsPrediction/")
slidify('index.Rmd')
browseURL("index.html")
sf
sf <- function(x){slidify(paste0(x,".Rmd"));browseURL(paste0(x,".html"))}
sf("index")
library(kernlab)
data(spam)
spam[1,]
sf("index")
spam[1,]
?spam
hist(spam$our)
spam[1,]
sf("index")
names(spam)
2/17
sf("index")
sf("index")
sf("index")
sf("index")
spam[1,]
pp <- rep(NA,dim(spam)[2]){for(i in 1:dim(spam)[2]){pp[i]<- summary(lm(spam$type ~ spam[,i]))$coeff[2,4]}
pp <- rep(NA,dim(spam)[2]);for(i in 1:dim(spam)[2]){pp[i]<- summary(lm(spam$type ~ spam[,i]))$coeff[2,4]}
warnings()
pp <- rep(NA,dim(spam)[2]);for(i in 1:dim(spam)[2]){pp[i]<- summary(lm(spam$type ~ spam[,i]))$coeff[2,4]}
pp[1]
pp[2]
spam$type
pp <- rep(NA,dim(spam)[2]);for(i in 1:dim(spam)[2]){pp[i]<- summary(lm(spam$type=="spam" ~ spam[,i]))$coeff[2,4]}
pp[1]
which.min(pp)
pp[58]
names(spam)[58]
which.min(pp[-58])
names(spam)p21
names(spam)[21]
plot(spam$your ~ spam$type)
boxplot(spam$your ~ spam$type,xlab="Email type",ylab="Frequence of 'your'",col=c(2,3))
boxplot(spam$your ~ spam$type,xlab="Email type",ylab="Frequence of 'your'",col=c(3,4))
boxplot(spam$your ~ spam$type,xlab="Email type",ylab="Frequence of 'your'",col=c("blue","red"))
boxplot(spam$your ~ spam$type,xlab="Email type",ylab="Frequency of 'your'",col=c("blue","red"))
dotplot(spam$your ~ spam$type)
?stripchart
stripchart(spam$your ~ spam$type,xlab="Email type",ylab="Frequency of 'your'",col=c("blue","red"))
?stripchart
stripchart(spam$your ~ spam$type,xlab="Email type",ylab="Frequency of 'your'",col=c("blue","red"),vertical=TRUE,method="jitter")
plot(density(spam$your[spam$type=="spam"]))
plot(density(spam$your[spam$type=="spam"]),col="red")
lines(density(spam$your[spam$type=="nonspam"]),col="blue")
plot(density(spam$your[spam$type=="nonspam"]),
col="blue",main="",xlab="Frequency of 'your'")
lines(density(spam$your[spam$type=="spam"]),col="red")
sf("index")
sf("index")
sf("index")
?abline
plot(density(spam$your[spam$type=="nonspam"]),
col="blue",main="",xlab="Frequency of 'your'")
lines(density(spam$your[spam$type=="spam"]),col="red")
abline(v=0.5,col="grey")
plot(density(spam$your[spam$type=="nonspam"]),
col="blue",main="",xlab="Frequency of 'your'")
lines(density(spam$your[spam$type=="spam"]),col="red")
abline(v=0.5,col="black")
?ifelse
prediction <- ifelse(spam$your > 0.5,"spam","nonspam")
table(prediction,type$spam)
prediction
prediction <- ifelse(spam$your > 0.5,"spam","nonspam")
table(prediction,spam$type)
prediction <- ifelse(spam$your > 0.5,"spam","nonspam")
table(prediction,spam$type)/length(spam)
prediction <- ifelse(spam$your > 0.5,"spam","nonspam")
table(prediction,spam$type)/length(spam$type)
results
write.table(format(results), row.names=F, col.names=F, quote=F)
results <- table(prediction,spam$type)/length(spam$type)
write.table(format(results), row.names=F, col.names=F, quote=F)
table(prediction,spam$type)/length(spam$type)
0.459 + 0.2923
sf("index")
slidify("index.Rmd")
slidify("index.Rmd")
getwd()
setwd("../003predictionStudyDesign/")
sf('index')
slidify("index.Rmd")
slidify("index.Rmd")
sf('index')
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
sf('index')
(0.5)^100
(0.5)^50
(0.5)^10
(0.5)^10*100
names(spam)
plot(spam$your,spam$you)
plot(spam$your,spam$you,col=(spam$type=="spam"+1))
plot(spam$your,spam$you,col=(spam$type=="spam"))
plot(spam$your,spam$you,col=((spam$type=="spam")+1))
?rep.int
groups
smallSpam <- spam[1:10,]
smallSpam[1,]
library(kernlab); data(spam); smallSpam <- spam[1:10,]
plot(smallSpam$your)
colors
labels
type
library(kernlab); data(spam); smallSpam <- spam[1:10,]
spamlabel <- (smallSpam$type=="spam")*1 + 1
plot(smallSpam$your,col=spamlabel,pch=21)
table(smallSpam$your)
table(smallSpam$type)
smallSpam$type[1:20]
spam$type[1:20]
smallSpam <- spam[sample(1:dim(spam))[2],]
library(kernlab); data(spam); set.seed(3435)
smallSpam <- spam[sample(dim(spam))[2],size=10),]
spamlabel <- (smallSpam$type=="spam")*1 + 1
plot(smallSpam$your,col=spamlabel,pch=21)
library(kernlab); data(spam); set.seed(3435)
smallSpam <- spam[sample(dim(spam)[2],size=10),]
spamlabel <- (smallSpam$type=="spam")*1 + 1
plot(smallSpam$your,col=spamlabel,pch=21)
smallSpam$type
sample(dim(spam)[2],size=10)
dim(spam)[2]
dim(spam)
library(kernlab); data(spam); set.seed(3435)
smallSpam <- spam[sample(dim(spam)[1],size=10),]
spamlabel <- (smallSpam$type=="spam")*1 + 1
plot(smallSpam$your,col=spamlabel,pch=21)
library(kernlab); data(spam); set.seed(3435)
smallSpam <- spam[sample(dim(spam)[1],size=10),]
spamlabel <- (smallSpam$type=="spam")*1 + 1
plot(smallSpam$your,col=spamlabel,pch=19)
library(kernlab); data(spam); set.seed(3335)
smallSpam <- spam[sample(dim(spam)[1],size=10),]
spamlabel <- (smallSpam$type=="spam")*1 + 1
plot(smallSpam$your,col=spamlabel,pch=19)
smallSpam[,c("type","your")]
library(kernlab); data(spam); set.seed(333)
smallSpam <- spam[sample(dim(spam)[1],size=10),]
spamlabel <- (smallSpam$type=="spam")*1 + 1
smallSpam[,c("type","your")]
library(kernlab); data(spam); set.seed(333)
smallSpam <- spam[sample(dim(spam)[1],size=10),]
spamlabel <- (smallSpam$type=="spam")*1 + 1
smallSpam[,c("type","you")]
summary(spam)
boxplot(spam$capitalTotal ~ spam$Type)
boxplot(spam$capitalTotal ~ spam$type)
plot(density(spam$capitalTotal[spam$type=="nonspam"]),
col="blue",main="",xlab="Frequency of 'your'")
lines(density(spam$capitalTotal[spam$type=="spam"]),col="red")
names(spam)
plot(density(spam$capitalAve[spam$type=="nonspam"]),
col="blue",main="",xlab="Frequency of 'your'")
lines(density(spam$capitalAVe[spam$type=="spam"]),col="red")
plot(density(spam$capitalAve[spam$type=="nonspam"]),
col="blue",main="",xlab="Frequency of 'your'")
lines(density(spam$capitalAve[spam$type=="spam"]),col="red")
summary(lm(spam$capitalAve ~ spam$type))
plot(density(spam$capitalAve[spam$type=="nonspam"]),
col="blue",main="",xlab="Frequency of 'your'")
lines(density(spam$capitalAve[spam$type=="spam"]),col="red")
smallSpam[,c("type","capitalAve")]
table(spam$type,spam$capitalAve > 3)
table(spam$type,spam$capitalAve > 3)/dim(spam)[1]
library(kernlab); data(spam); set.seed(333)
smallSpam <- spam[sample(dim(spam)[1],size=10),]
spamlabel <- (smallSpam$type=="spam")*1 + 1
plot(smallSpam,col=spamlabel)
library(kernlab); data(spam); set.seed(333)
smallSpam <- spam[sample(dim(spam)[1],size=10),]
spamLabel <- (smallSpam$type=="spam")*1 + 1
plot(smallSpam,col=spamLabel)
library(kernlab); data(spam); set.seed(333)
smallSpam <- spam[sample(dim(spam)[1],size=10),]
spamLabel <- (smallSpam$type=="spam")*1 + 1
plot(smallSpam$capitalAve,col=spamLabel)
table(smallSpam[,c("type","capitalAve")])
smallSpam[,c("type","capitalAve")]
rule1 <- function(x){
prediction <- rep(NA,length(x))
prediction[x > 2.7] <- "spam"
prediction[x < 2.45] <- "nonspam"
prediction[(x >= 2.45 & x <= 2.7)] <- "nonspam"
}
table(rule1(smallSpam$capitalAve),smallSpam$type)
rule1(smallSpam$capitalAve)
rule1 <- function(x){
prediction <- rep(NA,length(x))
prediction[x > 2.7] <- "spam"
prediction[x < 2.45] <- "nonspam"
prediction[(x >= 2.45 & x <= 2.7)] <- "nonspam"
return(prediction)
}
table(rule1(smallSpam$capitalAve),smallSpam$type)
smallSpam[,c("type","capitalAve")]
rule1 <- function(x){
prediction <- rep(NA,length(x))
prediction[x > 2.7] <- "spam"
prediction[x < 2.45] <- "nonspam"
prediction[(x >= 2.45 && x <= 2.7)] <- "nonspam"
return(prediction)
}
table(rule1(smallSpam$capitalAve),smallSpam$type)
rule1 <- function(x){
prediction <- rep(NA,length(x))
prediction[x > 2.7] <- "spam"
prediction[x < 2.45] <- "nonspam"
prediction[is.na(prediction)] <- "nonspam"
return(prediction)
}
table(rule1(smallSpam$capitalAve),smallSpam$type)
smallSpam[,c("type","capitalAve")]
?ifelse
prediction <- rep(NA,length(x))
prediction[x > 2.7] <- "spam"
prediction[x < 2.45] <- "nonspam"
x <- smallSpam$capitalAve
prediction <- rep(NA,length(x))
prediction[x > 2.7] <- "spam"
prediction[x < 2.45] <- "nonspam"
prediction
x[is.na(prediction)]
smallSpam$type[is.na(prediction)]
rule1 <- function(x){
prediction <- rep(NA,length(x))
prediction[x > 2.7] <- "spam"
prediction[x < 2.45] <- "nonspam"
prediction[is.na(prediction)] <- "nonspam"
return(prediction)
}
table(rule1(smallSpam$capitalAve),smallSpam$type)
prediction <- rep(NA,length(x))
prediction[x > 2.7] <- "spam"
prediction[x < 2.45] <- "nonspam"
table(prediction,smallSpam$type)
smallSpam[,c("type","capitalAve")]
rule1 <- function(x){
prediction <- rep(NA,length(x))
prediction[x > 2.7] <- "spam"
prediction[x < 2.43] <- "nonspam"
prediction[is.na(prediction)] <- "nonspam"
return(prediction)
}
table(rule1(smallSpam$capitalAve),smallSpam$type)
smallSpam[,c("type","capitalAve")]
x > 2.40 & x < 2.45
rule1 <- function(x){
prediction <- rep(NA,length(x))
prediction[x > 2.7] <- "spam"
prediction[x < 2.43] <- "nonspam"
prediction[x => 2.40 & x <= 2.45] <- "spam"
prediction[x => 2.44 & x <= 2.70] <- "nonspam"
return(prediction)
}
table(rule1(smallSpam$capitalAve),smallSpam$type)
rule1 <- function(x){
prediction <- rep(NA,length(x))
prediction[x > 2.7] <- "spam"
prediction[x < 2.43] <- "nonspam"
prediction[(x >= 2.40 & x <= 2.45)] <- "spam"
prediction[(x >= 2.44 & x <= 2.70)] <- "nonspam"
return(prediction)
}
table(rule1(smallSpam$capitalAve),smallSpam$type)
rule1 <- function(x){
prediction <- rep(NA,length(x))
prediction[x > 2.7] <- "spam"
prediction[x < 2.40] <- "nonspam"
prediction[(x >= 2.40 & x <= 2.45)] <- "spam"
prediction[(x > 2.45 & x <= 2.70)] <- "nonspam"
return(prediction)
}
table(rule1(smallSpam$capitalAve),smallSpam$type)
sf("index")
sf("index")
sf("index")
